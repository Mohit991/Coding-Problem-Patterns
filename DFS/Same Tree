# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right

#We will traverse both the trees together by taking each node of the tree. 
#if both nodes of the tree at same location are null then we move on. 
#If nodes are different at same location we will call it false. 

class Solution:
    def isSameTree(self, p: Optional[TreeNode], q: Optional[TreeNode]) -> bool:
        def traverse(root1, root2):
            if not root1 and not root2:
                return True
            if not root1 or not root2 or root1.val != root2.val:
                return False
            return traverse(root1.left, root2.left) and traverse(root1.right, root2.right)
        
        return traverse(p,q)
        
