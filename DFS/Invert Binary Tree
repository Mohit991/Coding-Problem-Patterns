# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right

#We will traverse through the tree. When we get to the bottom of the tree, we will exchange the 
#left and right pointers. 

class Solution:
    def invertTree(self, root: Optional[TreeNode]) -> Optional[TreeNode]:
        def invertTree(root):
            if not root:
                return
            invertTree(root.left)
            invertTree(root.right)
            temp = root.left
            root.left = root.right
            root.right = temp
            return
        
        invertTree(root)   
        return root
        
