# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next

#Take fast and slow pointer. 
class Solution:
    def middleNode(self, head: Optional[ListNode]) -> Optional[ListNode]:
        fast, slow = head, head
        
        while fast.next and fast.next.next:
            fast = fast.next.next
            slow = slow.next
        
        if fast.next: return slow.next
        else: return slow
        
