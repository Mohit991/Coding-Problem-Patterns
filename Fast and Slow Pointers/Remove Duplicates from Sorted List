# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next

#Solution: Take two ptrs. Front will move ahead and back will move behind it. If back and front have the same
#value, we will simply remove the node pointed by front and move on. Don't forget to write cornor cases. 

class Solution:
    def deleteDuplicates(self, head: Optional[ListNode]) -> Optional[ListNode]:
        if not head:
            return None
        if not head.next:
            return head
        
        back, front = head, head.next
        
        while front != None:
            if back.val == front.val:
                back.next = front.next
                front = back.next
            
            else:
                back = front
                front = front.next
                
        return head
