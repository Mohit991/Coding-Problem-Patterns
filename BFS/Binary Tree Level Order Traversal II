# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right

#We will do simple BFS and get the level order of the array. After that we can just reverse that list 
#and get the correct answer. 

class Solution:
    def levelOrderBottom(self, root: Optional[TreeNode]) -> List[List[int]]:
        if not root:
            return []
        
        levelOrder = []
        q = [root]
        
        while q:
            currentLevel = []
            lengthOfQueue = len(q)
            
            for i in range(lengthOfQueue):
                node = q.pop(0)
                currentLevel.append(node.val)
                if node.left:
                    q.append(node.left)
                if node.right:
                    q.append(node.right)
            
            levelOrder.append(currentLevel) 
        
        levelOrder.reverse()
        return levelOrder
