# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right

#We will use BFS using queue to generate the levels of the BT. At each level we will check if
#we have a leaf node or not. If we have a leaf node at any level, we will return the depth
# (ie level)

class Solution:
    def minDepth(self, root: Optional[TreeNode]) -> int:
        if not root: return 0
        minDepth = 0 
        q = [root]
        lengthOfQ = len(q)
        
        while q:
            minDepth += 1
            for i in range(lengthOfQ):
                node = q.pop(0)
                if not node.left and not node.right:
                    return minDepth
                
                if node.left:
                    q.append(node.left)
                
                if node.right:
                    q.append(node.right)
            lengthOfQ = len(q)

        return minDepth
